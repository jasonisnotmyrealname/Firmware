#!/bin/sh

# File is auto-generated by cmake compilation, do not edit.

# Ignore the expand_aliases command in zshell.
if [ ! -n "$ZSH_VERSION" ]; then
	shopt -s expand_aliases
fi

# Map the NuttX-style variable definition 'set <var> <value>' to something that
# bash and alternatives understand
set() {
	eval $1=$2
}
# alternative method with an alias:
# alias set='f(){ set -- "$1=$2"; eval "$1"; unset -f f; }; eval f'

# Execute another shell script.
# $1: Path to the script, (optionally starts with /, to match with the NuttX
# scripts)
sh() {
	script="$1"
	[[ "$script" != /* ]] && script="/$script"
	source "$(pwd)$script"
}

# Don't stop on errors.
#set -e

# Arguments passed to this script:
# $1: optional instance id
px4_instance=0
[[ -n "$1" ]] && px4_instance=$1

alias uorb='px4-uorb --instance $px4_instance'
alias camera_trigger='px4-camera_trigger --instance $px4_instance'
alias sensors='px4-sensors --instance $px4_instance'
alias param='px4-param --instance $px4_instance'
alias reboot='px4-reboot --instance $px4_instance'
alias shutdown='px4-shutdown --instance $px4_instance'
alias top='px4-top --instance $px4_instance'
alias listener='px4-listener --instance $px4_instance'
alias camera_feedback='px4-camera_feedback --instance $px4_instance'
alias commander='px4-commander --instance $px4_instance'
alias mavlink='px4-mavlink --instance $px4_instance'
alias logger='px4-logger --instance $px4_instance'
alias dataman='px4-dataman --instance $px4_instance'

